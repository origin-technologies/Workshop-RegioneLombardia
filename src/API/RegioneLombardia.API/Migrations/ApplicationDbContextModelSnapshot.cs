// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RegioneLombardia.Models.Store;

namespace RegioneLombardia.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RegioneLombardia.Models.Store.Application", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Archived")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdNotice")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("RegioneLombardia.Models.Store.Attachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Content")
                        .HasColumnType("int");

                    b.Property<int>("Filename")
                        .HasColumnType("int");

                    b.Property<int>("Filesize")
                        .HasColumnType("int");

                    b.Property<int>("IdNotice")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("RegioneLombardia.Models.Store.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Cittadini"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Imprese"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Enti e operatori"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Concorsi pubblici"
                        },
                        new
                        {
                            Id = 5,
                            Name = "In apertura"
                        });
                });

            modelBuilder.Entity("RegioneLombardia.Models.Store.Notice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AvailablityEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("AvailablityStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdType");

                    b.ToTable("Notices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AvailablityEndDate = new DateTime(2021, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AvailablityStartDate = new DateTime(2021, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Code = "RLD12021019722",
                            Description = @"Possono partecipare al presente Avviso i Comuni in forma singola o associata (ad esempio i Consorzi di Comuni, le Unioni di Comuni e le Comunità Montane). Nel caso di presentazione in forma di Ufficio di Piano, l’Ente Capofila presenta la domanda assumendo la funzione di referente unico per tutti i Comuni aderenti all’Ambito; pertanto, tutti gli adempimenti relativi alla Misura sono in capo all’ente capofila ed è inibita la presentazione della domanda da parte del singolo Comune.

I requisiti che devono possedere i Comuni sono i seguenti:

Compartecipare alla spesa per i servizi per la prima infanzia (asili nido/micro-nidi) Per “compartecipazione alla spesa” si intende ogni risorsa attivata dal Comune per assicurare il funzionamento dei servizi per la prima infanzia, migliorarne la qualità/capacità di risposta ai bisogni delle famiglie o favorire l’accesso ai servizi da parte delle famiglie.
Adottare agevolazioni tariffarie, differenziate in base all’ISEE, a favore delle famiglie, per la frequenza dei bambini ai servizi per la prima infanzia (asili nido/micro-nidi a titolarità pubblica o privati autorizzati).
In relazione a tale requisito, si specifica che i Comuni con asili nido/micro-nidi comunali, che al momento della pubblicazione del presente Avviso non si siano già Deliberazione di approvazione delle Tariffe o Documento equivalente, dovranno necessariamente adottarlo prima della presentazione della domanda di adesione alla Misura.

Essere titolari in forma singola o associata di nidi e/o micro-nidi pubblici e/o di avere sottoscritto convenzioni per l’annualità 2021-2022 per l’acquisto di posti in convenzione con asili nido e/o micro-nidi privati autorizzati.
In relazione a tale requisito, si specifica che i Comuni con asili nido/micro-nidi privati autorizzati, che al momento della pubblicazione del presente Avviso non si siano già dotati di convenzione per l’acquisto dei relativi posti per l’annualità 2021-2022 dovranno necessariamente perfezionarla prima della presentazione della domanda di adesione alla Misura. La convenzione deve prevedere la copertura dell’intero anno educativo 2021-2022. Qualora la convenzione scada successivamente alla data di presentazione della domanda di adesione e prima del 31 luglio 2022, il Comune dovrà impegnarsi in fase di adesione a sottoscrivere alla scadenza della stessa una nuova convenzione, a copertura dell’anno educativo e alle medesime condizioni della convenzione in essere alla data di presentazione della domanda.

Non aver applicato per l’annualità 2021-2022 aumenti di tariffe rispetto all’annualità 2020- 2021 ad eccezione delle seguenti fattispecie:
adeguamenti della quota di retta a carico della famiglia con aumenti entro il 5%;
arrotondamenti dell’importo della retta all’euro per eccesso o per difetto;
aumenti delle rette per le fasce ISEE superiori a € 20.000,00;
Saranno oggetto di specifica valutazione in fase di istruttoria le variazioni delle rette determinate al verificarsi delle seguenti fattispecie:
cambio di gestione del servizio (per esempio, da pubblico a privato o viceversa);
cambio delle modalità di calcolo delle rette (per esempio, da scaglioni ISEE a funzione lineare).",
                            Name = "Avviso per l’adesione dei Comuni alla misura Nidi Gratis - Bonus 2021-2022"
                        },
                        new
                        {
                            Id = 3,
                            AvailablityEndDate = new DateTime(2021, 7, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AvailablityStartDate = new DateTime(2021, 7, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Code = "RLO12021019946",
                            Description = "Apertura 07/07/2021, ore 11:00. Province: Como, Sondrio, Varese. Avviso a favore degli intermediari del commercio per la concessione di contributi pari al valore della tassa automobilistica pagata nel periodo tributario avente decorrenza nell’anno 2020 - Finestra 5",
                            Name = "Finestra 5, Province: Como, Sondrio, Varese - Avviso a favore degli intermediari del commercio"
                        },
                        new
                        {
                            Id = 4,
                            AvailablityEndDate = new DateTime(2021, 10, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AvailablityStartDate = new DateTime(2021, 7, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Code = "RLT12021020242",
                            Description = "In attuazione della d.G.R n. 4758/2021, Regione Lombardia favorisce il rinnovo del parco veicolare dei soggetti pubblici della Lombardia con veicoli di categoria M1, M2, N1 e N2 (art.47 del Codice della Strada - d.lgs. n. 285/92) a bassissime o zero emissioni destinati al trasporto di persone o di merci, privilegiando la demolizione di veicoli a benzina fino ad Euro 2/II incluso o diesel fino ad Euro 5/V incluso.",
                            Name = "Rinnova Veicoli Enti pubblici - Anno 2021"
                        },
                        new
                        {
                            Id = 11,
                            AvailablityEndDate = new DateTime(2021, 7, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AvailablityStartDate = new DateTime(2021, 6, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Code = "RLAM2021020382",
                            Description = "Codice Identificativo Gara : C.I.G. CODICE CIG ZDD3258ACF – CODICE CUP E85C18000010008",
                            Name = "FEC 50/2021 Richiesta di preventivo"
                        },
                        new
                        {
                            Id = 12,
                            AvailablityEndDate = new DateTime(2021, 7, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AvailablityStartDate = new DateTime(2021, 6, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Code = "RLO12021019945",
                            Description = "Apertura 06/07/2021, ore 15:00. Province: Brescia. Avviso a favore degli intermediari del commercio per la concessione di contributi pari al valore della tassa automobilistica pagata nel periodo tributario avente decorrenza nell’anno 2020 - Finestra 4",
                            Name = "NUFinestra 4, Province: Brescia - Avviso a favore degli intermediari del commercioLL"
                        },
                        new
                        {
                            Id = 14,
                            AvailablityEndDate = new DateTime(2021, 7, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AvailablityStartDate = new DateTime(2021, 6, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Code = "RLO12021019944",
                            Description = "Apertura 06/07/2021, ore 11:00. Province: Milano. Avviso a favore degli intermediari del commercio per la concessione di contributi pari al valore della tassa automobilistica pagata nel periodo tributario avente decorrenza nell’anno 2020 - Finestra 3",
                            Name = "Finestra 3, Province: Milano - Avviso a favore degli intermediari del commercio"
                        });
                });

            modelBuilder.Entity("RegioneLombardia.Models.Store.NoticeCategory", b =>
                {
                    b.Property<int?>("IdCategory")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("IdNotice")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasIndex("IdCategory");

                    b.HasIndex("IdNotice");

                    b.ToTable("NoticeCategories");
                });

            modelBuilder.Entity("RegioneLombardia.Models.Store.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("RegioneLombardia.Models.Store.Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Types");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Bando"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Manifestazione di Interesse"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Gare Beni e Servizi"
                        });
                });

            modelBuilder.Entity("RegioneLombardia.Models.Store.Notice", b =>
                {
                    b.HasOne("RegioneLombardia.Models.Store.Type", "Type")
                        .WithMany()
                        .HasForeignKey("IdType");
                });

            modelBuilder.Entity("RegioneLombardia.Models.Store.NoticeCategory", b =>
                {
                    b.HasOne("RegioneLombardia.Models.Store.Category", "Category")
                        .WithMany()
                        .HasForeignKey("IdCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RegioneLombardia.Models.Store.Notice", "Notice")
                        .WithMany()
                        .HasForeignKey("IdNotice")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
